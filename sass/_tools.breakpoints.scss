// Credits: https://www.sitepoint.com/managing-responsive-breakpoints-sass/

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
    // $breakpoints defined in _settings.globals.scss
    $raw-query: map-get($breakpoints, $breakpoint);

    @if $raw-query {
        $query: if(
            type-of($raw-query) == 'string',
                unquote($raw-query),
                inspect($raw-query)
        );

        @media #{$query} {
            @content;
        }
    }
    @else {
        @error 'No value found for `#{$breakpoint}`. '
            + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

// If you use a 'mobile-first' (mf-*) approach, this version should suit you quite well
// since you wonâ€™t need anything else than min-width media queries.
@mixin mf-respond-to($breakpoint) {
    // $mf-breakpoints defined in _settings.globals.scss
    $value: map-get($mf-breakpoints, $breakpoint);

    @if $value != null {
        @media (min-width: $value) {
            @content;
        }
    }
    @else {
        @error 'No value found for `#{$breakpoint}`. '
                + 'Please make sure it is defined in `$mf-breakpoints` map.';
    }
}

// TODO:  Use Sass-MQ, Breakpoint or include-media instead. See also
// https://css-tricks.com/approaches-media-queries-sass/.
